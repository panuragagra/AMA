@model POAM.Models.SuperSet

@using NonFactors.Mvc.Grid;

@{
    ViewData["Title"] = "Home Page";
}

<div id="bigDiv">
    <table align="center" style="border-radius: 10px !important; border-collapse:separate !important; background: white; border: 1px darkGrey solid; margin: 10px; width:95%; vertical-align: top; background-color: rgb(222, 222, 222);" border="0" cellspacing="0" cellpadding="3">
        <tbody>
            <tr style="height: 40px;">
                <td align="left">
                    <h1>&nbsp; Account Management Application - User Recertification</h1>
                </td>
            </tr>
            <tr style="background: white;">


                <td>



                    <div style="margin: 5px; text-align:center;">
                        <h1>  </h1>
                    </div>

                    @using (Html.BeginForm("Index", "home", FormMethod.Post))
                    {
                        <div style="text-align:center;">
                            <div>
                                <label>Select Application: </label>
                                &nbsp;
                                @Html.DropDownListFor(
x => x.SelectedApplicationID,
new SelectList(Model.applicationNames, "Id", "Name"),
"--Select Value--", new { @style = "width: 280px", @title= "Select Application" }
                )
                                @Html.ValidationMessageFor(x => x.SelectedApplicationID, "", new { @style = "color: Red;" })
                            </div>
                            <div>
                                <br />

                                <input type="submit" title="View User Accounts" name="submit" id="LoadDetails" value="View User Accounts" formaction="/Home/Index" class="button" />
                            </div>
                        </div>



                        <div id="IDMainContextGridView" style="display: @( Model.vOasis.Count() > 0 ? "inline" : "none" ) ">


                            <div class="panel-heading" style="text-align:right;">
                                <h2>   <a style="text-decoration:underline;font-size:20px;font-weight:bold" target="_blank" href="@Model.SelectedApplicationURL" title="Click here to go to the selected application"> Click here to go to @Model.SelectedApplicationName </a> </h2>
                            </div>

                            <div class="panel-heading" style="text-align:right;">
                                <a href="@Url.Action("ExportToExcel")"> <img src="~/images/buttonExcel.gif" alt="Export to Excel" title="Export to Excel" /> </a>
                            </div>
                            <div style="margin: 10px">

                                @(Html
                                  .Grid(Model.vOasis)
                                  .Build(columns =>
                                  {
                                      columns.Add(model => model.Office).Titled("Office");

                                      columns.Add(model => model.LastName).Titled("Last Name");
                                      columns.Add(model => model.FirstName).Titled("First Name");
                                      columns.Add(model => model.E_Mail).Titled("E-mail"); //.Formatted("{0:d}");
                                                  columns.Add(model => model.AccessLevel).Titled("Access Level");
                                      columns.Add(model => model.LastLogin).Titled("Last Login Date");
                                      columns.Add(model => model.LastCertifiedDate).Titled("Last Certified Date");
                                  })
                                  .Empty("No data found")
                                  .Named("UserDetails")
                                  .Filterable()
                                  .Sortable()
                                  .Pageable(pager =>
                                  {
                                      pager.ShowPageSizes = true;
                                      pager.PagesToDisplay = 5;
                                      pager.RowsPerPage = 10;
                                  })
                                )
                            </div>
                            <div style="text-align:center; margin: 10px;">
                                @Html.HiddenFor(model => Model.strScrollPosition)


                                @{
                                    if (TempData["RecertificationChangeLogID"] != null)
                                    {
                                        var RecertificationChangeLogID = TempData["RecertificationChangeLogID"].ToString();
                                        <input type="hidden" name="hdnRecertificationChangeLogID" value="@RecertificationChangeLogID" />
                                    }

                                }



                                <input type="submit" value="Click to Recertify" title="Click to Recertify" onclick="javascript:return confirm('Please note that by clicking on OK button confirms that the user accounts has been reviewed in the application and are being recertified. Click OK to proceed and CANCEL to cancel the request.')" name="submit" formaction="/Home/AddCertificatonDetails" id="SaveDetails" class="button" />

                                @if (@TempData["shortMessage"] != null && @TempData["shortMessage"].ToString() == "User Accounts Recertified Successfully.")
                                {
                                    <input type="submit" value="Undo Recertify" title="Undo Recertification" onclick="javascript:return confirm('Please confirm if you would like to proceed with undo recertification of user accounts that was done earlier. Click OK to proceed and CANCEL to cancel the request.')" name="submit" formaction="/Home/UndoCertificatonDetails" id="SaveDetails" class="button" style="background-color: red !important;" />
                                }

                            </div>

                        </div>

                        <div class="form-group">
                            <h2>
                                <div style="text-align: center">
                                    @TempData["shortMessage"]
                                </div>
                            </h2>
                        </div>
                    }
                </td>
            </tr>
        </tbody>
    </table>

    @*<br /><br />
        <h2>Change Log</h2>
        <br />*@

    @Html.HiddenFor(model => Model.strShowChangeLog)



    <div id="IDShowHideChangeLog" style="display:  @( Model.vOasis.Count() > 0 ? "inline" : "none" )">

        <div style="text-align: center">
            <div id="divWorkflowHistory"><a id="myLink" href="javascript:openWHistory();" title="View/Hide Change Log">View/Hide Change Log</a></div>
            <br />
            @* <div id="divWorkflowHistory" style="float:left"><a id="myLink" class="bstablinksactive" href="/home/Index/?ShowChangeLog=True">Change Log</a></div>
                @*<div id="divChangeHistory" style="float:left"><a id="myLink1" class="bstablinks" href="javascript:openCHistory();">Change History</a></div>*@
        </div>

        <div id="London" style="display:none; margin: 10px;">
            <table align="center" style="border-radius: 10px !important; border-collapse:separate !important; background: white; border: 1px darkGrey solid; margin: 10px; width:95%; vertical-align: top; background-color: rgb(222, 222, 222);" border="0" cellspacing="0" cellpadding="3">
                <tbody>
                    <tr style="height: 20px;">
                        <td align="left">
                            <h2>  &nbsp; Change Log </h2>
                        </td>
                    </tr>
                    <tr style="background: white;">


                        <td>
                            @if (Model.changeLogs!= null && Model.changeLogs.Count() > 0)
	                        {
                                                    <div class="panel-heading" style="text-align:right;">
                                                        <a href="@Url.Action("ExportToExcel_ChangeLog")"> <img src="~/images/buttonExcel.gif" alt="Export to Excel" /> </a>
                                                    </div>
	                        }
                            
                            <div style="margin: 10px">



                                @(Html
                                                                   .Grid(Model.changeLogs)
                                                                   .Build(columns =>
                                                                   {
                                                                       columns.Add(model => model.ApplicationName).Titled("Application Name");
                                                                       columns.Add(model => model.ChangeDesc).Titled("Event Description");
                                                                       columns.Add(model => model.FullNameWithOffice).Titled("Certified By");

                                                                       columns.Add(model => model.UpdatedDate).Titled("Certified Date");

                                                                       columns.Add(model => "<a onclick=\"ShowModalPopup('" + model.id.ToString() + "')\"  style=\"cursor: pointer;\" > Click here to see the user list </a>").Titled("Functions").Encoded(false).Filterable(false).Sortable(false);

                                                                   })
                                                                   .Empty("No data found")
                                                                   .Named("Changelog")                                                                   
                                                                   .Sortable()
                                                                   .Filterable()
                                                                   .Pageable(ChangeLogPager =>
                                                                   {
                                                                       ChangeLogPager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                                                       ChangeLogPager.ShowPageSizes = true;
                                                                       ChangeLogPager.PagesToDisplay = 3;
                                                                       ChangeLogPager.CurrentPage = 1;
                                                                       ChangeLogPager.RowsPerPage = 4;
                                                                   })
                                )

                            </div>

                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    @*<div id="Paris" style="display:Paris">
            change log
        </div>*@

   


</div>


<div class="modal" id="ModalPopup" >
    <div class="">
        <div class="modal-dialog" style="width:900px;">
            <div class="modal-content" style="background-color: #15396C;">

                <div style="margin: 25px;">
                    <p class="close" data-dismiss="modal" style="color: #fff !important;">&times;</p>
                    <h4 class="modal-title" style="color: #fff;"> <div id="PopupHeaderID">User List</div></h4>

                </div>

                <div class="modal-body" style="background-color: white;">
                    <div id="DIVLoadChangeLog_CertifiedUserList">
                        @Html.AjaxGrid(Url.Action("LoadChangeLog_CertifiedUserList", "Home", new { strChangeLogID = "1" }))
                    </div>

                </div>

                @*<div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal" id="Cancel">Cancel</a>
                    <a href="#" class="btn btn-success" id="Update">Update</a>
                    <input type="submit" class="btn btn-primary">Save changes</input>
                </div>*@

            </div>
        </div>
    </div>
</div>

<script>

    function ShowModalPopup(lngChangeLogID) {               
        LoadPopupData(lngChangeLogID);
        // how to pass and retrive the values to and from Modal.
        //You dont have to use the global variables
        //$("#ModalPopup").attr("data-name", "MohanKrishna");
        //$("#ModalPopup").attr("data-number", "TestingMohanKrishna");
        //$("#ModalPopup").modal({ cache: false }, 'show');

        $('#ModalPopup').modal('show');

    }

    $('#ModalPopup').on('shown', function () {
       // $(document).off('focusin.modal');
    });

    $('#ModalPopup').on('shown.bs.modal', function () {
        
        //$('#myInput').trigger('focus')
        //$(document).off('focusin.modal');
    })

     @*$("#ModalPopup").on('show.bs.modal', function () {

            //alert($("#ModalPopup").data("name"));
            //alert($("#ModalPopup").data("number"));

     var token = $('[name="__RequestVerificationToken"]').val();
    $.ajax({
                url: '@Url.Action("AddUsefulLifeBenchmarkYears", "TAMChapter3ConditionAssessment")',
                type: 'GET',
                cache: false,
                data: {
                __RequestVerificationToken: token,
                    ID: lngGlobal_ID,
                TamPlanID: lngGlobal_lngTAMPlanID
                }
                }).done(function (result) {
                    $("#DIV_ID_AddUsefulLifeBenchmarkYears").html(result);
                   // BindModalPoupSubmitFormButton();
                });
    });*@

    function ReloadGridViewData(grid, lngChangeLogID) {
        // grid.requestType = 'post'; // defaults to get
        grid.requestType = 'get'; // defaults to get
        grid.query.set('strChangeLogID', lngChangeLogID);
        grid.reload();
    }

    function LoadPopupData(lngChangeLogID) {
        var grid_ViewDivs = new MvcGrid(document.getElementById("DIVLoadChangeLog_CertifiedUserList").querySelector('.mvc-grid'));
        ReloadGridViewData(grid_ViewDivs, lngChangeLogID);
    }


    window.addEventListener('load', function () {

        if (document.getElementById('strShowChangeLog').value != "") {

            document.getElementById('London').style.display = document.getElementById('strShowChangeLog').value;
        }
    })

    window.onscroll = function () {
        var hdnScroll = document.getElementById("strScrollPosition");
        hdnScroll.value = document.documentElement.scrollTop;

        // alert(document.documentElement.scrollTop);
        // alert(document.body.scrollTop);
        // show.innerHTML = document.documentElement.scrollTop || document.body.scrollTop;
    };

    window.onload = function () {
        var hdnScroll = document.getElementById("strScrollPosition");

        if (hdnScroll.value != "") {
            // document.documentElement.scrollTop = hdnScroll.value;
            // window.scrollTo(0, document.body.scrollHeight);
            //hdnScroll.value
            window.scrollTo(0, hdnScroll.value);
        }
    }

    function openWHistory() {
        // alert(document.getElementById('strShowChangeLog').value);
        // alert('setting hiddend field value');

        if (document.getElementById('London').style.display == "block") {
            document.getElementById('London').style.display = "none";
        }
        else {
            document.getElementById('London').style.display = "block";
        }
        document.getElementById('strShowChangeLog').value = document.getElementById('London').style.display;

        $.ajax({
            url: "/Home/ShowHideChangeLog",
            type: "POST",
            data: { strShowChangeLog: document.getElementById('London').style.display },
            cache: false,
            async: true,
            success: function (data) {
                //   window.location.href = "/Home/Index";
            },
            error: function (req, status, error) {
                alert('error');
            }
        });
    }


    function openCHistory() {
        document.getElementById('Paris').style.display = "block";
        document.getElementById('London').style.display = "none";
        var d = document.getElementById("myLink1");
        d.className = "bstablinksactive";

        var d1 = document.getElementById("myLink");
        d1.className = "bstablinks";
    }




</script>
