pipeline {
    agent {
      label "FTA-WebAppsAgentRHEL1"
    }
    stages {
      stage("Check for msbuild") {
        steps {
        withDotNet(sdk: ".NET 5.0") {
          	echo 'Building..'
		  	sh(script: "dotnet build POAM.sln -c Release ", returnStdout: true)
          }
        }
        post {
          always {
            echo '========always========'
          }
          success {
            echo '========MSbuild installed========'
           
            }
          failure {
            echo '========MSbuild check failed========'
            echo '====++++Make sure msbuild path is correct++++===='
            echo '====++++MSbuild should be on the path as msbuild not msbuild.exe++++===='
            echo '====++++check the build node you are on...As a last resort contact a Devops toolchian admin.++++===='
          }
          changed {
            echo 'Things were different before...'
          }
        }
      }
	  stage("Code Scan") {
      environment {
                scannerHome = tool 'FTA-GSS-CUT-Sonar'
            }
        steps {
        withDotNet(sdk: ".NET 5.0") {
            withSonarQubeEnv('FTA-SonarQube') {
                echo 'Code analysis..'
                sh "dotnet ${scannerHome}/SonarScanner.MSBuild.dll begin /k:FTA-AMA-Sonar /d:sonar.host.url=http://10.75.142.85:9000 /d:sonar.login=722ba1bf3ed7836caba99fa160b79c8a4ddce983"
                sh "dotnet build"
                sh "dotnet ${scannerHome}/SonarScanner.MSBuild.dll end /d:sonar.login=722ba1bf3ed7836caba99fa160b79c8a4ddce983"
              }
            }
        }
		}
}
}
